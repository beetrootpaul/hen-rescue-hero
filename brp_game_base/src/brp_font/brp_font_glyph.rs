#[derive(Eq, PartialEq, Hash, Clone, Debug)]
pub enum BrpFontGlyph {
    Digit0,
    Digit1,
    Digit2,
    Digit3,
    Digit4,
    Digit5,
    Digit6,
    Digit7,
    Digit8,
    Digit9,
    //
    Colon,
    //
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    //
    None,
}

impl BrpFontGlyph {
    pub fn of(symbol: char) -> BrpFontGlyph {
        match symbol {
            '0' => BrpFontGlyph::Digit0,
            '1' => BrpFontGlyph::Digit1,
            '2' => BrpFontGlyph::Digit2,
            '3' => BrpFontGlyph::Digit3,
            '4' => BrpFontGlyph::Digit4,
            '5' => BrpFontGlyph::Digit5,
            '6' => BrpFontGlyph::Digit6,
            '7' => BrpFontGlyph::Digit7,
            '8' => BrpFontGlyph::Digit8,
            '9' => BrpFontGlyph::Digit9,
            //
            ':' => BrpFontGlyph::Colon,
            //
            'A' => BrpFontGlyph::A,
            'B' => BrpFontGlyph::B,
            'C' => BrpFontGlyph::C,
            'D' => BrpFontGlyph::D,
            'E' => BrpFontGlyph::E,
            'F' => BrpFontGlyph::F,
            'G' => BrpFontGlyph::G,
            'H' => BrpFontGlyph::H,
            'I' => BrpFontGlyph::I,
            'J' => BrpFontGlyph::J,
            'K' => BrpFontGlyph::K,
            'L' => BrpFontGlyph::L,
            'M' => BrpFontGlyph::M,
            'N' => BrpFontGlyph::N,
            'O' => BrpFontGlyph::O,
            'P' => BrpFontGlyph::P,
            'Q' => BrpFontGlyph::Q,
            'R' => BrpFontGlyph::R,
            'S' => BrpFontGlyph::S,
            'T' => BrpFontGlyph::T,
            'U' => BrpFontGlyph::U,
            'V' => BrpFontGlyph::V,
            'W' => BrpFontGlyph::W,
            'X' => BrpFontGlyph::X,
            'Y' => BrpFontGlyph::Y,
            'Z' => BrpFontGlyph::Z,
            //
            _ => BrpFontGlyph::None,
        }
    }
}
